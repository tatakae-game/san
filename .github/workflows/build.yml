name: Build

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  build-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE --parallel 10

  build-ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        cc: [[gcc, g++]]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install C++ packages
        run: sudo apt-get install libc++-dev libc++abi-dev

      - name: Install uuid package
        run: sudo apt-get install uuid-dev

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        env:
          CC: ${{ matrix.cc[0] }}
          CXX: ${{ matrix.cc[1] }}
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        env:
          CC: ${{ matrix.cc[0] }}
          CXX: ${{ matrix.cc[1] }}
        run: cmake --build . --config $BUILD_TYPE --parallel 10

  build-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          path: '.'

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: powershell
        working-directory: ${{runner.workspace}}/build
        run: cmake $env:GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: powershell
        run: cmake --build . --config ${{ env.BUILD_TYPE }}
